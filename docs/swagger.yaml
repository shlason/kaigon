basePath: /api
definitions:
  account.getInfoResponsePayload:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      isEmailVerified:
        type: boolean
      updatedAt:
        type: string
      uuid:
        type: string
    type: object
  account.getProfileResponsePayload:
    properties:
      avatar:
        type: string
      banner:
        type: string
      signature:
        type: string
      socialMedias:
        items:
          $ref: '#/definitions/account.socialMediaResponsePayload'
        type: array
    type: object
  account.getSettingNotificationResponsePayload:
    properties:
      articleTweet:
        type: boolean
      chat:
        type: boolean
      commentTagged:
        type: boolean
      commentTweet:
        type: boolean
      followOrOwnArticleReply:
        type: integer
      followed:
        type: boolean
      interestRecommendation:
        type: boolean
    type: object
  account.getSettingResponsePayload:
    properties:
      OAuthInfos:
        items:
          $ref: '#/definitions/account.oauthInfoResponsePayload'
        type: array
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      locale:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  account.oauthInfoResponsePayload:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      provider:
        type: string
      updatedAt:
        type: string
    type: object
  account.patchSettingResponsePayload:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      locale:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  account.socialMediaResponsePayload:
    properties:
      provider:
        type: string
      userName:
        type: string
    type: object
  auth.getAuthTokenByRefreshTokenResponsePayload:
    properties:
      authToken:
        type: string
    type: object
  auth.getCaptchaInfoResponsePayload:
    properties:
      uuid:
        type: string
    type: object
  auth.getOAuthUrlResponsePayload:
    properties:
      url:
        type: string
    type: object
  chat.chatMessageResponse:
    properties:
      content:
        type: string
      from:
        type: string
      id:
        type: string
      timestamp:
        type: string
      to:
        type: integer
      type:
        type: string
    type: object
  chat.chatRoomInfoResponse:
    properties:
      avatar:
        type: string
      emoji:
        type: string
      id:
        type: integer
      maximumMemberNum:
        type: integer
      members:
        items:
          $ref: '#/definitions/chat.chatRoomMemberResponse'
        type: array
      name:
        type: string
      type:
        type: string
    type: object
  chat.chatRoomMemberResponse:
    properties:
      accountUUID:
        type: string
      avatar:
        type: string
      enabledNotification:
        type: boolean
      lastSeenAt:
        type: string
      name:
        type: string
      theme:
        type: string
    type: object
  chat.client:
    type: object
  chat.getChatMessageRequestPayload:
    properties:
      chatRoomId:
        type: integer
    type: object
  chat.getRoomInviteCodeResponse:
    properties:
      code:
        type: string
    type: object
  chat.message:
    properties:
      cmd:
        type: string
      customCode:
        type: string
      payload: {}
      self:
        $ref: '#/definitions/chat.selfInfo'
      seq:
        type: integer
      statusCode:
        type: integer
      statusMessage: {}
    type: object
  chat.selfInfo:
    properties:
      accountUUID:
        type: string
      channel:
        $ref: '#/definitions/chat.client'
    type: object
  chat.sendChatMessageRequestPayload:
    properties:
      content:
        type: string
      from:
        type: string
      to:
        type: integer
      type:
        type: string
    type: object
  chat.updateChatRoomCustomSettingRequestPayload:
    properties:
      chatRoomId:
        type: integer
      enabledNotification:
        type: boolean
      theme:
        type: string
    type: object
  chat.updateChatRoomCustomSettingResponse:
    properties:
      lastSeenAt:
        type: string
    type: object
  chat.updateChatRoomLastSeenRequestPayload:
    properties:
      chatRoomId:
        type: integer
    type: object
  chat.updateChatRoomSettingRequestPayload:
    properties:
      avatar:
        type: string
      chatRoomId:
        type: integer
      emoji:
        type: string
      name:
        type: string
    type: object
  chat.updateChatRoomSettingResponse:
    properties:
      avatar:
        type: string
      chatRoomId:
        type: integer
      emoji:
        type: string
      name:
        type: string
    type: object
  controllers.JSONResponse:
    properties:
      code:
        type: string
      data: {}
      message: {}
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  image.uploadToS3ResponsePayload:
    properties:
      s3Url:
        type: string
      url:
        type: string
    type: object
  textproto.MIMEHeader:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
host: kaigon.sidesideeffect.io
info:
  contact:
    email: nocvi111@gmail.com
    name: API Support
    url: https://github.com/shlason/kaigon
  description: This is a forum server.
  license:
    name: MIT
    url: https://github.com/shlason/kaigon/blob/main/LICENSE
  title: Kaigon API
  version: "1.0"
paths:
  /account/:accountUUID/info:
    get:
      consumes:
      - application/json
      description: 取得 Account 相關資訊 (UUID, Email)
      parameters:
      - description: Account UUID
        in: path
        name: accountUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                Data:
                  $ref: '#/definitions/account.getInfoResponsePayload'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 取得 Account 資訊
      tags:
      - accounts
    patch:
      consumes:
      - application/json
      description: 更新 Account 相關資訊 (UUID, Email)
      parameters:
      - description: Account Email
        in: body
        name: email
        schema:
          type: string
      - description: Account Password
        in: body
        name: password
        schema:
          type: string
      - description: Account Original Passsword
        in: body
        name: originalPassword
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新 Account 資訊
      tags:
      - accounts
  /account/:accountUUID/profile:
    get:
      consumes:
      - application/json
      description: 取得 Account Profile (大頭貼、個人簽名檔、社群資訊、banner)
      parameters:
      - description: Account UUID
        in: path
        name: accountUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                Data:
                  $ref: '#/definitions/account.getProfileResponsePayload'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 取得 Account Profile
      tags:
      - accounts
    patch:
      consumes:
      - application/json
      description: 更新 Account Profile (大頭貼、個人簽名檔、社群資訊、banner)
      parameters:
      - description: 大頭貼
        in: body
        name: avatar
        schema:
          type: string
      - description: banner
        in: body
        name: banner
        schema:
          type: string
      - description: 個人簽名檔
        in: body
        name: signature
        schema:
          type: string
      - description: 社群資訊
        in: body
        name: socailMedias
        schema:
          items:
            $ref: '#/definitions/account.socialMediaResponsePayload'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新 Account Profile
      tags:
      - accounts
  /account/:accountUUID/setting:
    get:
      consumes:
      - application/json
      description: 取得 Account 相關設定 (暱稱、地區、第三方登入綁定資訊)
      parameters:
      - description: Account UUID
        in: path
        name: accountUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                Data:
                  $ref: '#/definitions/account.getSettingResponsePayload'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 取得 Account 設定
      tags:
      - accounts
    patch:
      consumes:
      - application/json
      description: 更新 Account 相關設定 (暱稱、地區)
      parameters:
      - description: 暱稱
        in: body
        name: name
        schema:
          type: string
      - description: 地區
        in: body
        name: locale
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                Data:
                  $ref: '#/definitions/account.patchSettingResponsePayload'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新 Account 設定
      tags:
      - accounts
  /account/:accountUUID/setting/notification:
    get:
      consumes:
      - application/json
      description: 取得 Account 相關通知設定
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                Data:
                  $ref: '#/definitions/account.getSettingNotificationResponsePayload'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 取得 Account 通知設定
      tags:
      - accounts
    put:
      consumes:
      - application/json
      description: 更新 Account 相關通知設定
      parameters:
      - description: '我追蹤的/我的文章有新留言 (0: 關閉, 1: 所有留言, 2: 標註我的留言)'
        in: body
        name: followOrOwnArticleReply
        required: true
        schema:
          type: integer
      - description: 我的留言被標注 (!!! 該值為 boolean !!!)
        in: body
        name: commentTagged
        required: true
        schema:
          type: string
      - description: 我的文章獲得心情 (!!! 該值為 boolean !!!)
        in: body
        name: articleTweet
        required: true
        schema:
          type: string
      - description: 我的留言獲得愛心 (!!! 該值為 boolean !!!)
        in: body
        name: commentTweet
        required: true
        schema:
          type: string
      - description: 我可能感興趣的內容 (!!! 該值為 boolean !!!)
        in: body
        name: interestRecommendation
        required: true
        schema:
          type: string
      - description: 聊天通知 (!!! 該值為 boolean !!!)
        in: body
        name: chat
        required: true
        schema:
          type: string
      - description: 被人追蹤時 (!!! 該值為 boolean !!!)
        in: body
        name: followed
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新 Account 通知設定
      tags:
      - accounts
  /account/{accountUUID}/info/verification:
    post:
      consumes:
      - application/json
      description: 發送 Email 認證信
      parameters:
      - description: Account UUID
        in: path
        name: accountUUID
        required: true
        type: string
      - description: Account Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Verification type (Email)
        in: body
        name: type
        required: true
        schema:
          type: string
      - description: 驗證連結點擊後導轉終點
        in: body
        name: redirectPath
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 啟動驗證階段
      tags:
      - accounts
  /account/{accountUUID}/info/verification/email:
    get:
      consumes:
      - application/json
      description: 進行 Email 的認證
      parameters:
      - description: Account UUID
        in: path
        name: accountUUID
        required: true
        type: string
      - description: Session Token
        in: query
        name: token
        required: true
        type: string
      - description: Verify Code
        in: query
        name: code
        required: true
        type: string
      - description: 驗證成功後的導轉路徑
        in: query
        name: redirectPath
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: Email 認證信中的認證連結
      tags:
      - accounts
  /account/info/password/reset:
    patch:
      consumes:
      - application/json
      description: 強制重新設定密碼藉由 Token, Code 相關驗證資訊
      parameters:
      - description: Account Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Account New Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: Verify Code
        in: body
        name: code
        required: true
        schema:
          type: string
      - description: Captcha Info
        in: body
        name: captchaUuid
        required: true
        schema:
          type: string
      - description: Captcha Info
        in: body
        name: captchaCode
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 強制重設密碼 (忘記密碼時)
      tags:
      - accounts
    post:
      consumes:
      - application/json
      description: 發送可以重設密碼的連結到指定 email 中
      parameters:
      - description: Account Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Front End Reset Password URL's Path
        in: body
        name: path
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 啟動重設密碼階段 (忘記密碼時)
      tags:
      - accounts
  /account/signin:
    post:
      consumes:
      - application/json
      description: 使用 Email, Password, Captcha Info 等資訊來登入
      parameters:
      - description: Account Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Account Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Captcha Info
        in: body
        name: captchaUuid
        required: true
        schema:
          type: string
      - description: Captcha Info
        in: body
        name: captchaCode
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Cookie:
              description: Refresh Token
              type: string
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 登入帳號
      tags:
      - accounts
  /account/signout:
    get:
      consumes:
      - application/json
      description: 登出帳號收回和刪除 refresh token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 登出帳號
      tags:
      - accounts
  /account/signup:
    post:
      consumes:
      - application/json
      description: 使用 Email, Password, Captcha Info 等資訊來註冊
      parameters:
      - description: Account Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Account Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Captcha Info
        in: body
        name: captchaUuid
        required: true
        schema:
          type: string
      - description: Captcha Info
        in: body
        name: captchaCode
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 註冊帳號
      tags:
      - accounts
  /auth/captcha:
    get:
      consumes:
      - application/json
      description: 取得圖形驗證動態產生的相對應 UUID 及驗證圖片
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/auth.getCaptchaInfoResponsePayload'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 取得圖形驗證相關資訊
      tags:
      - auth
  /auth/captcha/{captchaUUID}/image:
    get:
      consumes:
      - application/json
      description: 取得與 UUID 相對應的驗證圖片
      parameters:
      - description: Captcha Info
        in: path
        name: captchaUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: image/png
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 取得圖形驗證圖片
      tags:
      - auth
  /auth/captcha/{captchaUUID}/refresh:
    get:
      consumes:
      - application/json
      description: 刷新與 UUID 相對應的驗證圖片資訊及效期
      parameters:
      - description: Captcha Info
        in: path
        name: captchaUUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 刷新圖形驗證
      tags:
      - auth
  /auth/o/google/bind:
    get:
      consumes:
      - application/json
      description: 拿到 Google 給的 grant code 後導轉去指定前端頁面路徑 (導轉路徑為 "[GET]取得 Google OAuth
        相關 URL" 當初打 API 時給什麼路徑就轉去那)
      parameters:
      - description: Google grant code (from google)
        in: query
        name: code
        required: true
        type: string
      - description: Front end redirect path (from google OAuth state QS)
        in: query
        name: state
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: Google OAuth 登入且授權成功後所導轉的 URI (綁定用)
      tags:
      - auth
    patch:
      consumes:
      - application/json
      description: 更新 Account 第三方登入綁定資訊
      parameters:
      - description: Google grant code (from google)
        in: body
        name: grantCode
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新 Account 第三方登入綁定資訊
      tags:
      - auth
  /auth/o/google/login:
    get:
      consumes:
      - application/json
      description: 拿到 Google 給的 grant code 後再去和 Google 拿 access token，再用 access token
        去拿該 user 的相關資訊 (scope)，若失敗會在 QS 加上 oauth_login_failed=1
      parameters:
      - description: Google grant code (from google)
        in: query
        name: code
        required: true
        type: string
      - description: Front end redirect path (from google OAuth state QS)
        in: query
        name: state
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: Google OAuth 登入且授權成功後所導轉的 URI (登入用)
      tags:
      - auth
  /auth/o/google/url:
    get:
      consumes:
      - application/json
      description: 帶上 type (login, bind) 來表示要取得的是登入用，還是綁定第三方登入用，以及 redirectPath 表示成功後所導轉的終點
      parameters:
      - description: login or bind
        in: query
        name: type
        required: true
        type: string
      - description: 導轉終點
        in: query
        name: redirectPath
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/auth.getOAuthUrlResponsePayload'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 取得 Google OAuth 相關 URL
      tags:
      - auth
  /auth/session/token/refresh:
    get:
      consumes:
      - application/json
      description: 使用 Cookie 中的 REFRESH_TOKEN field 來獲取 authToken
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/auth.getAuthTokenByRefreshTokenResponsePayload'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 取得 authToken
      tags:
      - auth
  /chat/room:
    post:
      consumes:
      - application/json
      description: 建立聊天室
      parameters:
      - description: 聊天室類型 (personal or group)
        in: body
        name: type
        required: true
        schema:
          type: string
      - description: Chat Room Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Chat Room Avatar
        in: body
        name: avatar
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 建立聊天室
      tags:
      - chat
  /chat/room/:chatRoomID/invite/code:
    get:
      consumes:
      - application/json
      description: 取得聊天室邀請碼
      parameters:
      - description: Chat Room ID
        in: path
        name: chatRoomID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/chat.getRoomInviteCodeResponse'
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 取得聊天室邀請碼
      tags:
      - chat
  /chat/room/:chatRoomID/invite/code/:inviteCode:
    patch:
      consumes:
      - application/json
      description: 藉由邀請碼加入聊天室
      parameters:
      - description: Chat Room ID
        in: path
        name: chatRoomID
        required: true
        type: integer
      - description: Chat Room Invite Code
        in: path
        name: inviteCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 藉由邀請碼加入聊天室
      tags:
      - chat
  /chat/ws:
    get:
      consumes:
      - application/json
      description: HTTP GET 方法，在處理請求時會切換協議由 HTTP -> Websocket
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 建立 Chat Websocket 連線 (HTTP)
      tags:
      - chat
  /chat/ws/cmd:get_all_chat_room:
    get:
      consumes:
      - application/json
      description: 取得所有聊天室列表
      parameters:
      - description: 使用 timestamp 以此表示個別 message 的辨識 id
        in: body
        name: seq
        required: true
        schema:
          type: integer
      - description: 該 websocket 的操作 [get_all_chat_room]
        in: body
        name: cmd
        required: true
        schema:
          type: string
      - description: 'type: text'
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/chat.sendChatMessageRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/chat.message'
            - properties:
                payload:
                  items:
                    $ref: '#/definitions/chat.chatRoomInfoResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/chat.message'
      security:
      - ApiKeyAuth: []
      summary: 取得所有聊天室列表
      tags:
      - chat - websocket
  /chat/ws/cmd:get_chat_message:
    get:
      consumes:
      - application/json
      description: 取得某聊天室中的所有訊息
      parameters:
      - description: 使用 timestamp 以此表示個別 message 的辨識 id
        in: body
        name: seq
        required: true
        schema:
          type: integer
      - description: 該 websocket 的操作 [get_chat_message]
        in: body
        name: cmd
        required: true
        schema:
          type: string
      - description: Chat Room ID
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/chat.getChatMessageRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/chat.message'
            - properties:
                payload:
                  items:
                    $ref: '#/definitions/chat.chatMessageResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/chat.message'
      security:
      - ApiKeyAuth: []
      summary: 取得某聊天室中的所有訊息
      tags:
      - chat - websocket
  /chat/ws/cmd:have_read:
    get:
      consumes:
      - application/json
      description: 更新使用者已讀某個聊天室的最後時間
      parameters:
      - description: 使用 timestamp 以此表示個別 message 的辨識 id
        in: body
        name: seq
        required: true
        schema:
          type: integer
      - description: 該 websocket 的操作 [have_read]
        in: body
        name: cmd
        required: true
        schema:
          type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/chat.updateChatRoomLastSeenRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/chat.message'
            - properties:
                payload:
                  $ref: '#/definitions/chat.updateChatRoomCustomSettingResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/chat.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/chat.message'
      security:
      - ApiKeyAuth: []
      summary: 更新使用者已讀某個聊天室的最後時間
      tags:
      - chat - websocket
  /chat/ws/cmd:send_chat_message:
    get:
      consumes:
      - application/json
      description: 傳送聊天訊息
      parameters:
      - description: 使用 timestamp 以此表示個別 message 的辨識 id
        in: body
        name: seq
        required: true
        schema:
          type: integer
      - description: 該 websocket 的操作 [send_chat_message]
        in: body
        name: cmd
        required: true
        schema:
          type: string
      - description: 'type: text'
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/chat.sendChatMessageRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/chat.message'
            - properties:
                payload:
                  $ref: '#/definitions/chat.chatMessageResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/chat.message'
      security:
      - ApiKeyAuth: []
      summary: 傳送聊天訊息
      tags:
      - chat - websocket
  /chat/ws/cmd:update_chat_room_custom_setting:
    get:
      consumes:
      - application/json
      description: 更新特定聊天室的設定 (私人 - 僅自己有效)
      parameters:
      - description: 使用 timestamp 以此表示個別 message 的辨識 id
        in: body
        name: seq
        required: true
        schema:
          type: integer
      - description: 該 websocket 的操作 [update_chat_room_custom_setting]
        in: body
        name: cmd
        required: true
        schema:
          type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/chat.updateChatRoomCustomSettingRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/chat.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/chat.message'
      security:
      - ApiKeyAuth: []
      summary: 更新特定聊天室的設定 (私人 - 僅自己有效)
      tags:
      - chat - websocket
  /chat/ws/cmd:update_chat_room_setting:
    get:
      consumes:
      - application/json
      description: 更新特定聊天室的設定 (共通 - 聊天室成員皆套用)
      parameters:
      - description: 使用 timestamp 以此表示個別 message 的辨識 id
        in: body
        name: seq
        required: true
        schema:
          type: integer
      - description: 該 websocket 的操作 [update_chat_room_setting]
        in: body
        name: cmd
        required: true
        schema:
          type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/chat.updateChatRoomSettingRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/chat.message'
            - properties:
                payload:
                  $ref: '#/definitions/chat.updateChatRoomSettingResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/chat.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/chat.message'
      security:
      - ApiKeyAuth: []
      summary: 更新特定聊天室的設定 (共通 - 聊天室成員皆套用)
      tags:
      - chat - websocket
  /develop/utils/account/delete:
    get:
      consumes:
      - application/json
      description: 刪除所有開發者的所有帳號資料 (直接在網頁爆打這支就可以刪掉資料了)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      summary: 刪除所有開發者的所有帳號資料
      tags:
      - useful_utils_when_developing
  /image:
    post:
      consumes:
      - multipart/form-data
      description: 上傳圖片到 S3
      parameters:
      - in: formData
        name: filename
        type: string
      - in: formData
        name: size
        type: integer
      - description: S3 Bucket 路徑目前只接收 (account, article, chat)，屆時請依照不同類型的性質來區分路徑
        in: formData
        name: folder
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.JSONResponse'
            - properties:
                Data:
                  $ref: '#/definitions/image.uploadToS3ResponsePayload'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: 上傳圖片到 S3
      tags:
      - image
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
